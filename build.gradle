apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.7

buildscript{
    repositories { maven { url 'http://repo.thinkjoy.local/content/groups/public/' } }

    dependencies{
        classpath 'cn.thinkjoy.gradle.plugins:gradle-gitflow-plugin:1.0.1+'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.4'
        classpath 'org.hibernate.build.gradle:gradle-maven-publish-auth:2.0.1+'
    }
}

tasks.withType(Compile) {
    options.encoding = "UTF-8"
}

/** 此闭包内的声明子类皆可使用 */
allprojects {
    group = 'cn.thinkjoy.common'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    apply plugin: 'maven-publish-auth'

    repositories {
        repositories { maven { url 'http://repo.thinkjoy.local/content/groups/public/' } }
        mavenLocal()
        mavenCentral()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) { from components.java }
        }

        repositories {
            maven {
                name = 'thinkjoy'
                url "http://repo.thinkjoy.local/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            }
        }
    }
}

task "createJavaProject" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }

    /** 可选生成子文件夹 */
    file("src/main/filters").mkdirs()
    file("src/main/assembly").mkdirs()
    file("src/main/config").mkdirs()
    file("src/main/scripts").mkdirs()

    /** 填充文件，便于git提交 */
    file("src/main/java/cn/thinkjoy/common").mkdirs()
    file("src/main/java/cn/thinkjoy/common/package-info.java").createNewFile()

    file("src/test/java/cn/thinkjoy/common").mkdirs()
    file("src/test/java/cn/thinkjoy/common/package-info.java").createNewFile()
    file("src/test/resources/spring.xml").createNewFile()
}

task createREADME(){
    file("README.md").createNewFile()
}

configure(subprojects.findAll{it.name.contains('war')}){
    apply plugin: 'war'

    task createWebProject(dependsOn: 'createJavaProject') << {
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
    }
}

dependencies{
    compile 'org.mybatis:mybatis:3.2.2'

    compile 'org.springframework:spring-beans:4.1.0.RELEASE'
}





